{
  "security.workspace.trust.untrustedFiles": "open",
  "discord.detailsIdling": "being lazy",
  "discord.lowerDetailsIdling": "having IDM opened but not doing any work because I'm lazy ",
  "discord.lowerDetailsNoWorkspaceFound": "",
  "rpc.appName": "Visual Studio Code",
  "discord.largeImageIdling": "being lazy",
  "remote.SSH.showLoginTerminal": true,
  "editor.inlineSuggest.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": false,
    "scminput": false,
    "yaml": false,
    "c": true
  },
  "C_Cpp.errorSquiggles": "Disabled",
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "editor.minimap.enabled": false,
  "redhat.telemetry.enabled": true,
  "git.openRepositoryInParentFolders": "never",
  "files.associations": {
    "*.spec": "python",
    "*.def": "cpp"
  },
  "cmake.configureOnOpen": false,
  "debug.onTaskErrors": "debugAnyway",
  "clangTidy.executable": "/usr/bin/clang-tidy",
  "C_Cpp.intelliSenseEngine": "disabled",
  "clangd.path": "/home/d7ry/.config/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/17.0.3/clangd_17.0.3/bin/clangd",
  "workbench.iconTheme": "catppuccin-macchiato",
  "editor.fontFamily": "monospacemonospace",
  "editor.fontLigatures": true,
  "editor.codeLensFontFamily": "monospace",
  "editor.inlayHints.fontFamily": "monospace",
  "debug.console.fontFamily": "",
  "terminal.integrated.fontFamily": "monospace",
  "editor.inlayHints.enabled": "off",
  "vscode_custom_css.imports": [
    "file:///home/d7ry/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.1/dist/updateHandler.js"
  ],
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "vscode-pets.petColor": "lightbrown",
  "vscode-pets.petSize": "medium",
  "vscode-pets.throwBallWithMouse": true,
  "[cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
  },
  "C_Cpp.clang_format_style": "{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }",
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }",
  "editor.insertSpaces": true,
  "editor.indentSize": 8,
  "editor.tabSize": 8,
  "[python]": {
    "editor.formatOnType": true
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "hediet.vscode-drawio.resizeImages": null,
  "git.confirmSync": false,
  "git.autofetch": true,
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.typeCheckingMode": "basic",
  "animations.Durations": {
    "Tabs": 200
  },
  "animations.Active": "Indent",
  "animations.Enabled": true,
  "animations.CursorAnimation": true,
  "terminal.integrated.inheritEnv": false,
  "gitlens.hovers.enabled": false,
  "python.analysis.inlayHints.callArgumentNames": "all",
  "python.analysis.inlayHints.variableTypes": true,
  "workbench.colorTheme": "Visual Studio 2019 Dark plus syntax",
  "workbench.editor.showTabs": "single",
  "chatgpt.lang": "en",
  "cSpell.userWords": ["shortterm"],
  "settingsSync.keybindingsPerPlatform": false,
  "cmake.options.statusBarVisibility": "visible",
  "diffEditor.ignoreTrimWhitespace": false,
  "cmake.showOptionsMovedNotification": false,
  "workbench.sideBar.location": "right",
  "window.zoomLevel": 1,
  "explorer.confirmDelete": false,
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "editor.semanticTokenColorCustomizations": {
    "[Visual Studio 2019 Dark plus syntax]": {
      "rules": {
        "macro": {
          "foreground": "#00e1ffd1",
          "fontStyle": ""
        },
        "namespace": {
          "fontStyle": "underline"
        },
        "property": {
          "fontStyle": ""
        },
        "function": {
          "fontStyle": "bold"
        },
        "method.static": {
          "fontStyle": "bold"
        },
        "property.static": {
          "fontStyle": "bold"
        },
        "variable.global": {
          "fontStyle": "bold"
        }
      }
    }
  },
  "editor.tokenColorCustomizations": {
    "[Visual Studio 2019 Dark plus syntax]": {
      "textMateRules": [
        {
          "scope": "comment.block",
          "settings": {
            "fontStyle": "",
            "foreground": "#06d66b"
          }
        }
      ]
    }
  },
  "editor.formatOnSave": true,
  "editor.hover.delay": 50,
  "latex-workshop.latex.tools": [
    {
      "name": "latexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "lualatexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-lualatex",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "xelatexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-xelatex",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "latexmk_rconly",
      "command": "latexmk",
      "args": ["%DOC%"],
      "env": {}
    },
    {
      "name": "pdflatex",
      "command": "pdflatex",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "bibtex",
      "command": "bibtex",
      "args": ["%DOCFILE%"],
      "env": {}
    },
    {
      "name": "rnw2tex",
      "command": "Rscript",
      "args": [
        "-e",
        "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
      ],
      "env": {}
    },
    {
      "name": "jnw2tex",
      "command": "julia",
      "args": ["-e", "using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"],
      "env": {}
    },
    {
      "name": "jnw2texminted",
      "command": "julia",
      "args": [
        "-e",
        "using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"
      ],
      "env": {}
    },
    {
      "name": "pnw2tex",
      "command": "pweave",
      "args": ["-f", "tex", "%DOC_EXT%"],
      "env": {}
    },
    {
      "name": "pnw2texminted",
      "command": "pweave",
      "args": ["-f", "texminted", "%DOC_EXT%"],
      "env": {}
    },
    {
      "name": "tectonic",
      "command": "tectonic",
      "args": ["--synctex", "--keep-logs", "%DOC%.tex"],
      "env": {}
    }
  ],
  "latex-workshop.latex.outDir": "%DIR%/build",
  "latex-workshop.latex.magic.args": [
    "-synctex=1",
    "-interaction=nonstopmode",
    "-file-line-error",
    "--output-directory=%OUTDIR%",
    "%DOC%"
  ],

  "latex-workshop.latex.recipes": [
    {
      "name": "latexmk",
      "tools": ["latexmk"]
    },
    {
      "name": "latexmk (latexmkrc)",
      "tools": ["latexmk_rconly"]
    },
    {
      "name": "latexmk (lualatex)",
      "tools": ["lualatexmk"]
    },
    {
      "name": "latexmk (xelatex)",
      "tools": ["xelatexmk"]
    },
    {
      "name": "pdflatex -> bibtex -> pdflatex * 2",
      "tools": ["pdflatex", "bibtex", "pdflatex", "pdflatex"]
    },
    {
      "name": "Compile Rnw files",
      "tools": ["rnw2tex", "latexmk"]
    },
    {
      "name": "Compile Jnw files",
      "tools": ["jnw2tex", "latexmk"]
    },
    {
      "name": "Compile Pnw files",
      "tools": ["pnw2tex", "latexmk"]
    },
    {
      "name": "tectonic",
      "tools": ["tectonic"]
    }
  ],
  // vim stuff
  "vim.handleKeys": {
    "<C-d>": true,
    "<C-s>": false,
    "<C-z>": false,
    "<C-n>": false,
    "<C-p>": false,
  },
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-w>"],
      "commands": ["deleteInsideWord"]
    },
    {
      "before": ["<C-n>"],
      "commands": ["selectNextSuggestion"]
    }
  ],
  "vim.normalModeKeyBindings": [
    {
        "before": [":"],
        "commands": [
            "workbench.action.showCommands",
        ],
        "silent": true
    },
    {
      "before": ["K"],
      "commands": [
          "editor.action.showHover",
      ]
    },
    {
      "before":["f", "r"],
      "commands":[
        "editor.action.referenceSearch.trigger"
      ]
    },
    {
      "before":["f", "d"],
      "commands":[
        "editor.action.peekDefinition"
      ]
    },
    {
      "before":["f", "t"],
      "commands":["editor.action.peekTypeDefinition"]
    },
    {
      "before":["f", "s"],
      "commands":["workbench.action.gotoSymbol"]
    },
    {
      "before":["f", "S"],
      "commands":["workbench.action.showAllSymbols"]
    },
    {
      "before": ["f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
     "before": ["/"],
      "commands": ["editor.action.startFindReplaceAction"] 
    }
  ]
}